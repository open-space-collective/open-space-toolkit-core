<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="_zip_8hpp" kind="file" language="C++">
    <compoundname>Zip.hpp</compoundname>
    <includes local="no">iterator</includes>
    <includes local="no">tuple</includes>
    <includes local="no">utility</includes>
    <includedby refid="_array_8hpp" local="no">include/OpenSpaceToolkit/Core/Container/Array.hpp</includedby>
    <incdepgraph>
      <node id="2">
        <label>iterator</label>
      </node>
      <node id="1">
        <label>include/OpenSpaceToolkit/Core/Container/Iterator/Zip.hpp</label>
        <link refid="_zip_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>tuple</label>
      </node>
      <node id="4">
        <label>utility</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="8">
        <label>include/OpenSpaceToolkit/Core/Container/Table/Row.hpp</label>
        <link refid="_row_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>include/OpenSpaceToolkit/Core/Container/Table/Cell.hpp</label>
        <link refid="_cell_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>include/OpenSpaceToolkit/Core/Logger/Sink/Sink.hpp</label>
        <link refid="_sink_2_sink_8hpp"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>include/OpenSpaceToolkit/Core/Logger/Source/Source.hpp</label>
        <link refid="_source_2_source_8hpp"/>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>src/OpenSpaceToolkit/Core/Container/Table/Row.cpp</label>
        <link refid="_row_8cpp"/>
      </node>
      <node id="11">
        <label>src/OpenSpaceToolkit/Core/Container/Table.cpp</label>
        <link refid="_table_8cpp"/>
      </node>
      <node id="1">
        <label>include/OpenSpaceToolkit/Core/Container/Iterator/Zip.hpp</label>
        <link refid="_zip_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>include/OpenSpaceToolkit/Core/Logger/Sink.hpp</label>
        <link refid="_sink_8hpp"/>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>include/OpenSpaceToolkit/Core/Container/Dictionary.hpp</label>
        <link refid="_dictionary_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>src/OpenSpaceToolkit/Core/Type/String.cpp</label>
        <link refid="_string_8cpp"/>
      </node>
      <node id="3">
        <label>include/OpenSpaceToolkit/Core/Container/Object.hpp</label>
        <link refid="_object_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>include/OpenSpaceToolkit/Core/Container/Array.hpp</label>
        <link refid="_array_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>src/OpenSpaceToolkit/Core/Container/Dictionary.cpp</label>
        <link refid="_dictionary_8cpp"/>
      </node>
      <node id="22">
        <label>include/OpenSpaceToolkit/Core/Logger/Pump.hpp</label>
        <link refid="_pump_8hpp"/>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>src/OpenSpaceToolkit/Core/Container/Object.cpp</label>
        <link refid="_object_8cpp"/>
      </node>
      <node id="15">
        <label>src/OpenSpaceToolkit/Core/FileSystem/File.cpp</label>
        <link refid="_file_8cpp"/>
      </node>
      <node id="9">
        <label>include/OpenSpaceToolkit/Core/Container/Table.hpp</label>
        <link refid="_table_8hpp"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>include/OpenSpaceToolkit/Core/FileSystem/Directory.hpp</label>
        <link refid="_directory_8hpp"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>include/OpenSpaceToolkit/Core/FileSystem.hpp</label>
        <link refid="_file_system_8hpp"/>
      </node>
      <node id="21">
        <label>include/OpenSpaceToolkit/Core/Logger/Source.hpp</label>
        <link refid="_source_8hpp"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>include/OpenSpaceToolkit/Core/Logger/Sink/Console.hpp</label>
        <link refid="_console_8hpp"/>
      </node>
      <node id="19">
        <label>include/OpenSpaceToolkit/Core/Logger.hpp</label>
        <link refid="_logger_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>src/OpenSpaceToolkit/Core/FileSystem/Directory.cpp</label>
        <link refid="_directory_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classostk_1_1core_1_1container_1_1iterator_1_1_zip_iterator" prot="public">ostk::core::container::iterator::ZipIterator</innerclass>
    <innerclass refid="classostk_1_1core_1_1container_1_1iterator_1_1_zip_iterator_1_1_iterator" prot="public">ostk::core::container::iterator::ZipIterator::Iterator</innerclass>
    <innernamespace refid="namespaceostk">ostk</innernamespace>
    <innernamespace refid="namespaceostk_1_1core">ostk::core</innernamespace>
    <innernamespace refid="namespaceostk_1_1core_1_1container">ostk::core::container</innernamespace>
    <innernamespace refid="namespaceostk_1_1core_1_1container_1_1iterator">ostk::core::container::iterator</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__OpenSpaceToolkit_Core_Container_Iterator_Zip__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__OpenSpaceToolkit_Core_Container_Iterator_Zip__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iterator&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;tuple&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceostk" kindref="compound">ostk</ref></highlight></codeline>
<codeline lineno="11"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">core</highlight></codeline>
<codeline lineno="13"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceostk_1_1core_1_1container" kindref="compound">container</ref></highlight></codeline>
<codeline lineno="15"><highlight class="normal">{</highlight></codeline>
<codeline lineno="16" refid="namespaceostk_1_1core_1_1container_1_1iterator" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">iterator</highlight></codeline>
<codeline lineno="17"><highlight class="normal">{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>T&gt;</highlight></codeline>
<codeline lineno="24" refid="classostk_1_1core_1_1container_1_1iterator_1_1_zip_iterator" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classostk_1_1core_1_1container_1_1iterator_1_1_zip_iterator" kindref="compound">ZipIterator</ref></highlight></codeline>
<codeline lineno="25"><highlight class="normal">{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="27" refid="classostk_1_1core_1_1container_1_1iterator_1_1_zip_iterator_1_1_iterator" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classostk_1_1core_1_1container_1_1iterator_1_1_zip_iterator_1_1_iterator" kindref="compound">Iterator</ref><sp/>:<sp/>std::iterator&lt;std::forward_iterator_tag,<sp/>std::tuple&lt;decltype(*std::declval&lt;T&gt;().begin())...&gt;&gt;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="30" refid="classostk_1_1core_1_1container_1_1iterator_1_1_zip_iterator_1_1_iterator_1a462d7998def0934afa08f158c7711aba" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::tuple&lt;decltype(std::declval&lt;T&gt;().begin())...&gt;<sp/><ref refid="classostk_1_1core_1_1container_1_1iterator_1_1_zip_iterator_1_1_iterator_1a462d7998def0934afa08f158c7711aba" kindref="member">iterators_</ref>;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="classostk_1_1core_1_1container_1_1iterator_1_1_zip_iterator_1_1_iterator_1a62922888770b995d6ea7a3f54068c2ed" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classostk_1_1core_1_1container_1_1iterator_1_1_zip_iterator_1_1_iterator_1a62922888770b995d6ea7a3f54068c2ed" kindref="member">Iterator</ref>(decltype(<ref refid="classostk_1_1core_1_1container_1_1iterator_1_1_zip_iterator_1_1_iterator_1a462d7998def0934afa08f158c7711aba" kindref="member">iterators_</ref>)<sp/>anIteratorList)</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classostk_1_1core_1_1container_1_1iterator_1_1_zip_iterator_1_1_iterator_1a462d7998def0934afa08f158c7711aba" kindref="member">iterators_</ref><sp/>{std::move(anIteratorList)}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="classostk_1_1core_1_1container_1_1iterator_1_1_zip_iterator_1_1_iterator_1a4c9c979ef43c93647970416b3a0a8b9d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classostk_1_1core_1_1container_1_1iterator_1_1_zip_iterator_1_1_iterator" kindref="compound">Iterator</ref>&amp;<sp/><ref refid="classostk_1_1core_1_1container_1_1iterator_1_1_zip_iterator_1_1_iterator_1a4c9c979ef43c93647970416b3a0a8b9d" kindref="member">operator++</ref>()</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>increment(std::index_sequence_for&lt;T...&gt;<sp/>{});</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="classostk_1_1core_1_1container_1_1iterator_1_1_zip_iterator_1_1_iterator_1a17f719da0f404bf820aff3dd790474b7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classostk_1_1core_1_1container_1_1iterator_1_1_zip_iterator_1_1_iterator" kindref="compound">Iterator</ref><sp/><ref refid="classostk_1_1core_1_1container_1_1iterator_1_1_zip_iterator_1_1_iterator_1a17f719da0f404bf820aff3dd790474b7" kindref="member">operator++</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>saved<sp/>{*</highlight><highlight class="keyword">this</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>increment(std::index_sequence_for&lt;T...&gt;<sp/>{});</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>saved;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="classostk_1_1core_1_1container_1_1iterator_1_1_zip_iterator_1_1_iterator_1a1f8d3567cd758e2e05378f0de74dc3b9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classostk_1_1core_1_1container_1_1iterator_1_1_zip_iterator_1_1_iterator_1a1f8d3567cd758e2e05378f0de74dc3b9" kindref="member">operator!=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classostk_1_1core_1_1container_1_1iterator_1_1_zip_iterator_1_1_iterator" kindref="compound">Iterator</ref>&amp;<sp/>anIterator)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="54"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classostk_1_1core_1_1container_1_1iterator_1_1_zip_iterator_1_1_iterator_1a462d7998def0934afa08f158c7711aba" kindref="member">iterators_</ref><sp/>!=<sp/>anIterator.<ref refid="classostk_1_1core_1_1container_1_1iterator_1_1_zip_iterator_1_1_iterator_1a462d7998def0934afa08f158c7711aba" kindref="member">iterators_</ref>;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="classostk_1_1core_1_1container_1_1iterator_1_1_zip_iterator_1_1_iterator_1a059837024f85829b815a7f276e65b50e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="classostk_1_1core_1_1container_1_1iterator_1_1_zip_iterator_1_1_iterator_1a059837024f85829b815a7f276e65b50e" kindref="member">operator*</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="59"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>deref(std::index_sequence_for&lt;T...&gt;<sp/>{});</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;std::size_t...<sp/>I&gt;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>deref(std::index_sequence&lt;I...&gt;)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="66"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Iterator::value_type<sp/>{*std::get&lt;I&gt;(<ref refid="classostk_1_1core_1_1container_1_1iterator_1_1_zip_iterator_1_1_iterator_1a462d7998def0934afa08f158c7711aba" kindref="member">iterators_</ref>)...};</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;std::size_t...<sp/>I&gt;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>increment(std::index_sequence&lt;I...&gt;)</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>l<sp/>=<sp/>{(++std::get&lt;I&gt;(<ref refid="classostk_1_1core_1_1container_1_1iterator_1_1_zip_iterator_1_1_iterator_1a462d7998def0934afa08f158c7711aba" kindref="member">iterators_</ref>),<sp/>0)...};</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(void)l;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79" refid="classostk_1_1core_1_1container_1_1iterator_1_1_zip_iterator_1a7adfbf838edf1bbf80d9862373e74524" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classostk_1_1core_1_1container_1_1iterator_1_1_zip_iterator_1a7adfbf838edf1bbf80d9862373e74524" kindref="member">ZipIterator</ref>(T&amp;...<sp/>aSequence)</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>begin_<sp/>{std::make_tuple(aSequence.begin()...)},</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end_<sp/>{std::make_tuple(aSequence.end()...)}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85" refid="classostk_1_1core_1_1container_1_1iterator_1_1_zip_iterator_1ae4c8c2625fedbb5ce799ef15fef96c1a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classostk_1_1core_1_1container_1_1iterator_1_1_zip_iterator_1_1_iterator" kindref="compound">ZipIterator::Iterator</ref><sp/><ref refid="classostk_1_1core_1_1container_1_1iterator_1_1_zip_iterator_1ae4c8c2625fedbb5ce799ef15fef96c1a" kindref="member">begin</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="86"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>begin_;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="classostk_1_1core_1_1container_1_1iterator_1_1_zip_iterator_1af5067549c260224ccb8e652979d1455f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classostk_1_1core_1_1container_1_1iterator_1_1_zip_iterator_1_1_iterator" kindref="compound">ZipIterator::Iterator</ref><sp/><ref refid="classostk_1_1core_1_1container_1_1iterator_1_1_zip_iterator_1af5067549c260224ccb8e652979d1455f" kindref="member">end</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="91"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>end_;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classostk_1_1core_1_1container_1_1iterator_1_1_zip_iterator_1_1_iterator" kindref="compound">ZipIterator::Iterator</ref><sp/>begin_;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classostk_1_1core_1_1container_1_1iterator_1_1_zip_iterator_1_1_iterator" kindref="compound">ZipIterator::Iterator</ref><sp/>end_;</highlight></codeline>
<codeline lineno="98"><highlight class="normal">};</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>T&gt;</highlight></codeline>
<codeline lineno="103" refid="namespaceostk_1_1core_1_1container_1_1iterator_1a25872b7f46de31f17770db725eb1ae15" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespaceostk_1_1core_1_1container_1_1iterator_1a25872b7f46de31f17770db725eb1ae15" kindref="member">Zip</ref>(T&amp;&amp;...<sp/>seqs)</highlight></codeline>
<codeline lineno="104"><highlight class="normal">{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classostk_1_1core_1_1container_1_1iterator_1_1_zip_iterator" kindref="compound">ZipIterator</ref>&lt;T...&gt;<sp/>{seqs...};</highlight></codeline>
<codeline lineno="106"><highlight class="normal">}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>iterator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>container</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>core</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>ostk</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="include/OpenSpaceToolkit/Core/Container/Iterator/Zip.hpp"/>
  </compounddef>
</doxygen>
